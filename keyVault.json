{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workloadName": {
            "type": "string",
            "metadata": {
                "description": "The short name of the workload"
            },
            "defaultValue": "ocs"
        },
        "environment": {
            "type": "string",
            "metadata": {
                "description": "Short abbreveation of the environment stage: demo, dev, test, stage, etc."
            },
            "defaultValue": "lab1"
        },
        "region": {
            "type": "string",
            "metadata": {
                "description": "Abbreveation of the location where the resource will be deployed. Will be used only for naming purposes. E.g. westeu,northeu"
            },
            "defaultValue": "westeu"

        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": ""
            },
            "defaultValue": "vnet-ngpdevops-westeu-001"
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": ""
            },
            "defaultValue": "snet-pe-ngpdevops-westeu-001"
        },
        "vnetRgName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Resource Group where then VNet is deployed"
            },
            "defaultValue": "rg-nw-lab1-westeu-001"
        },
        "skuName": {
            "type": "string",
            "metadata": {
                "description": "The name of SKU for Key Vault, e.g. 'Standard'"
            },
            "allowedValues": [ "Standard", "Premium" ],
            "defaultValue": "Standard"
        },
        "skuFamily": {
            "type": "string",
            "metadata": {
                "description": "The family of SKU for Key Vault"
            },
            "allowedValues": [ "A" ],
            "defaultValue": "A"
        },
        "enabledForDeployment": {
            "type": "bool",
            "metadata": {
                "description": "Specifies whether Azure VMs are permitted to retrieve certificates stored as secrets from the key vault."
            },
            "defaultValue": true
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "metadata": {
                "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
            },
            "defaultValue": true
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "metadata": {
                "description": "Specifies whether ARM is permitted to retrieve secrets from the key vault."
            },
            "defaultValue": false
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "A list of tags required by policy"
            },
            "defaultValue": {
                "Application Name": "OCCworks",
                "Business Criticality": "none",
                "Owner": "Francis Hardy",
                "Start date of project": "none",
                "Ticket Number": "0"
            }
        }
    },
    "variables": {
        "kvName": "[concat('kv-', parameters('workloadName'), parameters('environment'), '-', parameters('region'), '-001')]",
        "kvId": "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]",
        "tenantId": "[subscription().tenantId]"
    },
    "resources": [
        {
            "name": "[variables('kvName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "tenantId": "[variables('tenantId')]",
                "enableSoftDelete": true,
                "accessPolicies": [],
                "sku": {
                    "name": "[parameters('skuName')]",
                    "family": "[parameters('skuFamily')]"
                },
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny"
                }
            }
        }
    ],
    "outputs": {
        "keyVaultId": {
            "type": "string",
            "value": "[variables('kvId')]"
        },
        "keyVaultSiteUri": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('kvName'))).vaultUri]"
        },
        "keyVaultName": {
            "type": "string",
            "value": "[variables('kvName')]"
        }
    }
}
